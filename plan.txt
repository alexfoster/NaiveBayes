plan

1. pre-process dataset, eliminate unneeded attributes
2. implement bayes
	-learn(class, attributes[])
	-handle discrete and continuous attributes with hardcoded 
		- discrete: attribute value is either "yes" or "no"
		- continuous: attribute is any number of ranges: "0-0.2", "0.2-0.4", etc
3. need to learn subset of unis (training set is majority of data, testing minority)
4. find online rankings of "high value" or "affordable" universities
5. we need a classification attribute: "high-value" = true if university included in these high value online rankings
6. naive bayes will then give a probability that a given university in the test set is a high value university
7. we then rank the probabilities that a university is high value and compare to rankings of online ranking
or 7b. we simply consider higher probability classification to be high value and assemble confusion matrix with online rankings

summary: our overall goal is to determine how these online rankings are supported by our department of education dataset. if our confusion matrix has lots of positive matches then we have successfully "reverse engineered" the online ranking.


